---
// File: astro-domain-registrar/src/components/Header.astro
---
<header>
  <div class="container">
    <div class="logo">
      <a href="/">DomainReg</a>
    </div>
    <nav>
      <a href="/">Home</a>
      <a href="/domains">Search Domains</a>
      <a href="/login" id="nav-login">Login</a>
      <a href="/signup" id="nav-signup">Sign Up</a>
      <a href="/dashboard" id="nav-dashboard" style="display:none;">Dashboard</a>
      <a href="#" id="nav-logout" style="display:none;">Logout</a>
    </nav>
  </div>
</header>

<script>
  // Basic script to toggle nav items based on mock auth state
  function updateNav() {
    try {
      const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';
      const loginLink = document.getElementById('nav-login');
      const signupLink = document.getElementById('nav-signup');
      const dashboardLink = document.getElementById('nav-dashboard');
      const logoutLink = document.getElementById('nav-logout');

      if (!loginLink || !signupLink || !dashboardLink || !logoutLink) {
        // If elements are not found, maybe nav is not fully rendered yet or structure changed.
        // console.warn("Nav elements not all found for auth update.");
        return;
      }

      if (isAuthenticated) {
        loginLink.style.display = 'none';
        signupLink.style.display = 'none';
        dashboardLink.style.display = 'inline-block';
        logoutLink.style.display = 'inline-block';
      } else {
        loginLink.style.display = 'inline-block';
        signupLink.style.display = 'inline-block';
        dashboardLink.style.display = 'none';
        logoutLink.style.display = 'none';
      }

      // Ensure logout listener is only added once or is idempotent
      if (logoutLink && !logoutLink.dataset.listenerAttached) {
        logoutLink.addEventListener('click', (e) => {
          e.preventDefault();
          localStorage.removeItem('isAuthenticated');
          localStorage.removeItem('currentUser');
          localStorage.removeItem('mockUser');
          window.location.href = '/login'; // Redirect to login after logout
        });
        logoutLink.dataset.listenerAttached = 'true';
      }
    } catch (e) {
      console.warn("Could not update nav based on localStorage state.", e);
    }
  }

  // Update nav on initial load
  document.addEventListener('DOMContentLoaded', updateNav);
  // Update nav when Astro finishes its page load (important for SPA-like transitions)
  document.addEventListener('astro:page-load', updateNav);
  // Update nav if storage changes (e.g. login/logout on another tab)
  window.addEventListener('storage', (event) => {
    if (event.key === 'isAuthenticated' || event.key === 'currentUser' || event.key === 'mockUser') {
      updateNav();
    }
  });
</script>

<style>
  header {
    background-color: var(--color-surface);
    padding: var(--space-m) 0;
    border-bottom: 1px solid var(--color-border);
    box-shadow: var(--box-shadow-sm);
    position: sticky; /* Make header sticky */
    top: 0;
    z-index: 1000; /* Ensure it's above other content */
  }
  .container {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 0 var(--space-l); /* Match main-content padding */
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .logo a {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--color-primary);
    text-decoration: none;
  }
  .logo a:hover {
    color: var(--color-primary-dark);
  }
  nav {
    display: flex;
    gap: var(--space-s); /* Slightly reduced gap */
  }
  nav a {
    text-decoration: none;
    color: var(--color-text);
    font-weight: 500;
    padding: var(--space-s) var(--space-m);
    border-radius: var(--border-radius-small);
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  }
  nav a:hover,
  nav a.active { /* Basic active state, would need JS to set 'active' class */
    background-color: var(--color-primary);
    color: var(--color-surface);
    text-decoration: none;
  }
  #nav-logout { /* Default state for logout button before hover */
    color: var(--color-danger); /* Make logout link text red by default */
  }
  #nav-logout:hover {
    background-color: var(--color-danger);
    color: var(--color-surface);
  }
</style>
```
