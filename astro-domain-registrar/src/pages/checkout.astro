---
import Layout from '../layouts/Layout.astro';

// These would typically come from URL params or sessionStorage
let domainName = 'example.com'; // Default/placeholder
let domainPrice = '$12.99/yr'; // Default/placeholder
let error = '';

if (Astro.url.searchParams.has('domain') && Astro.url.searchParams.has('price')) {
  domainName = Astro.url.searchParams.get('domain');
  domainPrice = decodeURIComponent(Astro.url.searchParams.get('price'));
} else {
  // Attempt to get from sessionStorage if not in URL (more robust for complex data)
  // This part needs client-side script to access sessionStorage
}

// Shopify conceptual integration:
// This would be the URL to your Shopify checkout, possibly with pre-filled cart information.
// For a real Shopify integration, you'd use the Shopify Buy SDK or Storefront API
// to create a checkout and then redirect to `checkoutUrl`.
const conceptualShopifyCheckoutUrl = `https://your-shopify-store.myshopify.com/cart/${domainName}:1?checkout[shipping_address][country]=ZA`;

---

<Layout title={`Checkout - Register ${domainName} - Domain Registrar`}>
  <h1>Domain Registration Checkout</h1>

  <div id="checkout-details" style="background-color: #fff; padding: 1.5rem; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); margin-bottom: 2rem;">
    <h2>Order Summary</h2>
    {error && <p style="color: red;">{error}</p>}
    {!error && domainName && domainPrice ? (
      <div>
        <p><strong>Domain Name:</strong> <span id="domain-name-display">{domainName}</span></p>
        <p><strong>Price:</strong> <span id="domain-price-display">{domainPrice}</span> (for the first year)</p>
        <p>You are about to register <strong>{domainName}</strong>.</p>

        <form id="payment-form" style="margin-top: 1.5rem;">
          {/* Basic placeholder for further user details if needed before Shopify redirect */}
          {/* For a real app, you might collect billing address here if not handled by Shopify */}

          <button type="button" id="proceed-to-payment-btn" style="padding: 0.75rem 1.5rem; background-color: #5cb85c; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1.1rem;">
            Proceed to Payment (via Shopify)
          </button>
        </form>
      </div>
    ) : (
      <p>No domain selected for checkout. Please <a href="/domains" style="color: #007bff;">search for a domain</a> first.</p>
    )}
  </div>

  <script define:vars={{ conceptualShopifyCheckoutUrl, initialDomain: domainName, initialPrice: domainPrice }}>
    const domainNameDisplay = document.getElementById('domain-name-display');
    const domainPriceDisplay = document.getElementById('domain-price-display');
    const proceedButton = document.getElementById('proceed-to-payment-btn');
    let currentDomain = initialDomain;
    let currentPrice = initialPrice;

    // Try to get from sessionStorage if URL params were not conclusive or for refresh
    // This ensures that even if the page is refreshed, it might retain state.
    try {
        const storedDomain = sessionStorage.getItem('checkoutDomainName');
        const storedPrice = sessionStorage.getItem('checkoutDomainPrice');
        if (storedDomain && storedPrice) {
            currentDomain = storedDomain;
            currentPrice = storedPrice;
            if (domainNameDisplay) domainNameDisplay.textContent = currentDomain;
            if (domainPriceDisplay) domainPriceDisplay.textContent = currentPrice;

            // Update h1 and title potentially
            const h1 = document.querySelector('h1');
            if (h1) h1.textContent = `Domain Registration Checkout - ${currentDomain}`;
            document.title = `Checkout - Register ${currentDomain} - Domain Registrar`;
        } else if (!initialDomain && !initialPrice) {
             const checkoutDetailsDiv = document.getElementById('checkout-details');
             if(checkoutDetailsDiv) {
                checkoutDetailsDiv.innerHTML = `<p>No domain selected for checkout. Please <a href="/domains" style="color: #007bff;">search for a domain</a> first.</p>`;
             }
        }
    } catch (e) {
        console.warn('SessionStorage not available or item not found.', e);
    }


    if (proceedButton) {
      proceedButton.addEventListener('click', () => {
        if (!currentDomain || !currentPrice) {
          alert('Error: Domain details are missing. Please try searching again.');
          return;
        }
        // In a real Shopify integration, you would:
        // 1. Use JavaScript (Shopify Buy SDK) to create a checkout with the domain item.
        // 2. Get a checkout URL from Shopify.
        // 3. Redirect the user to that Shopify checkout URL.
        alert(`Redirecting to Shopify to complete payment for ${currentDomain} (${currentPrice}).\n(Conceptual URL: ${conceptualShopifyCheckoutUrl.replace('example.com', currentDomain)})`);
        // window.location.href = conceptualShopifyCheckoutUrl.replace('example.com', currentDomain); // Uncomment for actual conceptual redirect
        console.log('Proceeding to conceptual Shopify URL:', conceptualShopifyCheckoutUrl.replace('example.com', currentDomain));
      });
    }
  </script>
</Layout>
```
